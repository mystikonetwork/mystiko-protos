syntax = "proto3";

package mystiko.core.service.config.v1;

import "mystiko/config/v1/chain.proto";
import "mystiko/config/v1/mystiko.proto";
import "mystiko/config/v1/circuit.proto";
import "mystiko/config/bridge/v1/bridge.proto";
import "mystiko/config/contract/v1/deposit.proto";
import "mystiko/config/contract/v1/pool.proto";
import "mystiko/config/contract/v1/contract.proto";
import "mystiko/core/v1/common.proto";

service MystikoConfigService {
  rpc GetMystikoConfig(GetMystikoConfigRequest) returns (GetMystikoConfigResponse);
  rpc FindDefaultCircuit(FindDefaultCircuitRequest) returns (FindDefaultCircuitResponse);
  rpc FindCircuit(FindCircuitRequest) returns (FindCircuitResponse);
  rpc FindChain(FindChainRequest) returns (FindChainResponse);
  rpc FindPeerChains(FindPeerChainsRequest) returns (FindPeerChainsResponse);
  rpc FindAssetSymbols(FindAssetSymbolsRequest) returns (FindAssetSymbolsResponse);
  rpc FindBridge(FindBridgeRequest) returns (FindBridgeResponse);
  rpc FindBridges(FindBridgesRequest) returns (FindBridgesResponse);
  rpc FindDepositContract(FindDepositContractRequest) returns (FindDepositContractResponse);
  rpc FindDepositContractByAddress(FindDepositContractByAddressRequest) returns (FindDepositContractByAddressResponse);
  rpc FindPoolContract(FindPoolContractRequest) returns (FindPoolContractResponse);
  rpc FindPoolContracts(FindPoolContractsRequest) returns (FindPoolContractsResponse);
  rpc FindPoolContractByAddress(FindPoolContractByAddressRequest) returns (FindPoolContractByAddressResponse);
  rpc FindContractByAddress(FindContractByAddressRequest) returns (FindContractByAddressResponse);
  rpc FindTransactionUrl(FindTransactionUrlRequest) returns (FindTransactionUrlResponse);
}

message GetMystikoConfigRequest {}

message GetMystikoConfigResponse {
  mystiko.config.v1.MystikoConfig config = 1;
}

message FindDefaultCircuitRequest {
  mystiko.core.v1.CircuitType circuit_type = 1;
}

message FindDefaultCircuitResponse {
  mystiko.config.v1.CircuitConfig config = 1;
}

message FindCircuitRequest {
  string circuit_name = 1;
}

message FindCircuitResponse {
  mystiko.config.v1.CircuitConfig config = 1;
}

message FindChainRequest {
  uint64 chain_id = 1;
}

message FindChainResponse {
  mystiko.config.v1.ChainConfig config = 1;
}

message FindPeerChainsRequest {
  uint64 chain_id = 1;
}

message FindPeerChainsResponse {
  repeated mystiko.config.v1.ChainConfig configs = 1;
}

message FindAssetSymbolsRequest {
  uint64 chain_id = 1;
  uint64 peer_chain_id = 2;
}

message FindAssetSymbolsResponse {
  repeated string asset_symbol = 1;
}

message FindBridgesRequest {
  uint64 chain_id      = 1;
  uint64 peer_chain_id = 2;
  string asset_symbol  = 3;
}

message FindBridgesResponse {
  repeated mystiko.core.v1.BridgeType bridge_type = 1;
}

message FindBridgeRequest {
  mystiko.core.v1.BridgeType bridge_type = 1;
}

message FindBridgeResponse {
  mystiko.config.bridge.v1.BridgeConfig config = 1;
}

message FindDepositContractRequest {
  uint64 chain_id                        = 1;
  uint64 peer_chain_id                   = 2;
  string asset_symbol                    = 3;
  mystiko.core.v1.BridgeType bridge_type = 4;
}

message FindDepositContractResponse {
  mystiko.config.contract.v1.DepositContractConfig config = 1;
}

message FindDepositContractByAddressRequest {
  uint64 chain_id = 1;
  string address  = 2;
}

message FindDepositContractByAddressResponse {
  mystiko.config.contract.v1.DepositContractConfig config = 1;
}

message FindPoolContractRequest {
  uint64 chain_id                        = 1;
  string asset_symbol                    = 2;
  mystiko.core.v1.BridgeType bridge_type = 3;
  uint32 version                         = 4;
}

message FindPoolContractResponse {
  mystiko.config.contract.v1.PoolContractConfig config = 1;
}

message FindPoolContractsRequest {
  uint64 chain_id                        = 1;
  string asset_symbol                    = 2;
  mystiko.core.v1.BridgeType bridge_type = 3;
}

message FindPoolContractsResponse {
  mystiko.config.contract.v1.PoolContractConfig config = 1;
}

message FindPoolContractByAddressRequest {
  uint64 chain_id = 1;
  string address  = 2;
}

message FindPoolContractByAddressResponse {
  mystiko.config.contract.v1.PoolContractConfig config = 1;
}

message FindContractByAddressRequest {
  uint64 chain_id = 1;
  string address  = 2;
}

message FindContractByAddressResponse {
  mystiko.config.contract.v1.ContractConfig config = 1;
}

message FindTransactionUrlRequest {
  uint64 chain_id = 1;
  string tx_hash  = 2;
}

message FindTransactionUrlResponse {
  optional string url = 1;
}