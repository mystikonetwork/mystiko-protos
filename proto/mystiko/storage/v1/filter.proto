syntax = "proto3";

package mystiko.storage.v1;

enum SubFilterOperator {
  SUB_FILTER_OPERATOR_UNSPECIFIED   = 0;
  SUB_FILTER_OPERATOR_IS_NULL       = 1;
  SUB_FILTER_OPERATOR_IS_NOT_NULL   = 2;
  SUB_FILTER_OPERATOR_EQUAL         = 3;
  SUB_FILTER_OPERATOR_NOT_EQUAL     = 4;
  SUB_FILTER_OPERATOR_GREATER       = 5;
  SUB_FILTER_OPERATOR_GREATER_EQUAL = 6;
  SUB_FILTER_OPERATOR_LESS          = 7;
  SUB_FILTER_OPERATOR_LESS_EQUAL    = 8;
  SUB_FILTER_OPERATOR_BETWEEN_AND   = 9;
  SUB_FILTER_OPERATOR_IN            = 10;
}

enum ConditionOperator {
  CONDITION_OPERATOR_UNSPECIFIED = 0;
  CONDITION_OPERATOR_AND         = 1;
  CONDITION_OPERATOR_OR          = 2;
}

enum Order {
  ORDER_UNSPECIFIED = 0;
  ORDER_ASC         = 1;
  ORDER_DESC        = 2;
}

enum ColumnType {
  COLUMN_TYPE_UNSPECIFIED = 0;
  COLUMN_TYPE_BOOL        = 1;
  COLUMN_TYPE_CHAR        = 2;
  COLUMN_TYPE_I8          = 3;
  COLUMN_TYPE_I16         = 4;
  COLUMN_TYPE_I32         = 5;
  COLUMN_TYPE_I64         = 6;
  COLUMN_TYPE_I128        = 7;
  COLUMN_TYPE_ISIZE       = 8;
  COLUMN_TYPE_U8          = 9;
  COLUMN_TYPE_U16         = 10;
  COLUMN_TYPE_U32         = 11;
  COLUMN_TYPE_U64         = 12;
  COLUMN_TYPE_U128        = 13;
  COLUMN_TYPE_USIZE       = 14;
  COLUMN_TYPE_F32         = 15;
  COLUMN_TYPE_F64         = 16;
  COLUMN_TYPE_STRING      = 17;
  COLUMN_TYPE_BIG_INT     = 18;
  COLUMN_TYPE_BIG_UINT    = 19;
  COLUMN_TYPE_JSON        = 20;
}

message ColumnValue {
  oneof value {
    bool    bool_value     = 1;
    string  char_value     = 2;
    sint32  i8_value       = 3;
    sint32  i16_value      = 4;
    sint32  i32_value      = 5;
    sint64  i64_value      = 6;
    bytes   i128_value     = 7;
    sint64  isize_value    = 8;
    uint32  u8_value       = 9;
    uint32  u16_value      = 10;
    uint32  u32_value      = 11;
    uint64  u64_value      = 12;
    bytes   u128_value     = 13;
    uint64  usize_value    = 14;
    float   f32_value      = 15;
    double  f64_value      = 16;
    string  string_value   = 17;
    BigInt  big_int_value  = 18;
    bytes   big_uint_value = 19;
    string  json_value     = 20;
  }
}

message BigInt {
  bool  is_positive = 1;
  bytes value       = 2;
}

message SubFilter {
  SubFilterOperator operator           = 1;
  string            column             = 2;
  repeated          ColumnValue values = 3;
}

message Condition {
  ConditionOperator operator              = 1;
  repeated          SubFilter sub_filters = 2;
}

message OrderBy {
  repeated  string  columns = 1;
  Order     order           = 2;
}

message QueryFilter {
  repeated Condition  conditions          = 1;
  ConditionOperator   conditions_operator = 2;
  optional uint64     limit               = 3;
  optional uint64     offset              = 4;
  optional OrderBy    order_by            = 5;
}