syntax = "proto3";

package mystiko.api.handler.v1;

import "mystiko/core/handler/v1/account.proto";
import "mystiko/storage/v1/filter.proto";
import "mystiko/core/document/v1/account.proto";

message CreateAccountRequest {
  mystiko.core.handler.v1.CreateAccountOptions options = 1;
}

message CountAccountRequest {
  mystiko.storage.v1.QueryFilter filter = 1;
}

message FindAccountRequest {
  oneof condition {
    mystiko.storage.v1.QueryFilter filter = 1;
    bool find_all                         = 2;
  }
}

message FindAccountByIdentifierRequest {
  oneof identifier {
    string id                             = 2;
    string shielded_address               = 3;
    string public_key                     = 4;
  }
}

message UpdateAccountRequest {
  mystiko.core.handler.v1.UpdateAccountOptions options = 1;
  oneof identifier {
    string id               = 2;
    string shielded_address = 3;
    string public_key       = 4;
  }
}

message UpdateEncryptionRequest {
  string old_wallet_password = 1;
  string new_wallet_password = 2;
}

message ExportSecretKeyRequest {
  string wallet_password    = 1;
  oneof identifier {
    string id               = 2;
    string public_key       = 3;
    string shielded_address = 4;
  }
}

message CreateAccountResponse {
  mystiko.core.document.v1.Account account = 1;
}

message CountAccountResponse {
  uint64 count = 1;
}

message FindAccountResponse {
  repeated mystiko.core.document.v1.Account account = 1;
}

message FindAccountByIdentifierResponse {
  optional mystiko.core.document.v1.Account account = 1;
}

message UpdateAccountResponse {
  mystiko.core.document.v1.Account account = 1;
}

message UpdateEncryptionResponse {
  repeated mystiko.core.document.v1.Account account = 1;
}

message ExportSecretKeyResponse {
  string secret_key = 1;
}